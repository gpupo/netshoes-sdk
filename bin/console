#!/usr/bin/env php
<?php

/*
 * This file is part of gpupo component
 * Created by Gilmar Pupo <g@g1mr.com>
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 * For more information, see <http://www.g1mr.com/>.
 */
require __DIR__.'/../vendor/autoload.php';

use Gpupo\NetshoesSdk\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Output\OutputInterface;


$app = new Application("netshoes-sdk");
$app->findConfig([__DIR__.'/../']);

$app->appendCommand('credential:test', 'Testa a validade de suas credenciais')
    ->setCode(function (InputInterface $input, OutputInterface $output) use ($app) {
        $list = $app->processInputParameters([], $input, $output);

        if ($app->factorySdk($list)->factoryManager('templates')->getBrands()) {
            $output->writeln('<info>Success!</info>');
        } else {
            $output->writeln('<error>Error</error>');
        }
    });

foreach([
    'brands',
    'flavors',
    'colors',
    'departments',
    'sizes',
    'attributes',
] as $templateKey) {
    $app->appendCommand('templates:' . $templateKey, 'List of ' . $templateKey)
        ->setCode(function (InputInterface $input, OutputInterface $output) use ($app, $templateKey) {
            $list = $app->processInputParameters([], $input, $output);
            $brands = $app->factorySdk($list)->factoryManager('templates')->fetchByRoute($templateKey);
            $app->displayTableResults($output, $brands);
    });
}

$app->appendCommand('product:status', 'Consulta a situação de um produto')
    ->addArgument('skuSellerId', InputArgument::REQUIRED, 'Lojista Sku Id')
    ->setCode(function (InputInterface $input, OutputInterface $output) use ($app) {
        $list = $app->processInputParameters([], $input, $output);

$input->getArgument('skuSellerId');
    if ($app->factorySdk($list)->factoryManager('product')->fetch()) {
        $output->writeln('<info>Success!</info>');
    } else {
        $output->writeln('<error>Error</error>');
    }
});


$app->run();
